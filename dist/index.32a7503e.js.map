{"mappings":"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","sources":["src/index.js"],"sourcesContent":["document.addEventListener(\"DOMContentLoaded\", () => {\r\n\r\n    class Gallery {\r\n        constructor() {\r\n            this.columns = 5\r\n            this.heightGallery = 0\r\n\r\n            this.items = [...document.querySelectorAll('.gallery__item')]\r\n            this.widthItem = 0\r\n            this.heightItem = 0\r\n\r\n            this.currentItem = this.items[0]\r\n\r\n            this.currentY = 0\r\n            this.wheelMod = 0\r\n\r\n            this.listeners()\r\n\r\n            this.checkScreen()\r\n            this.setItemsWidth()\r\n            this.setItemsPosition()\r\n        }\r\n\r\n        listeners() {\r\n            window.addEventListener('resize', () => {\r\n                this.checkScreen()\r\n                this.setItemsWidth()\r\n                this.setItemsPosition()\r\n            })\r\n\r\n            this.items.forEach(item => {\r\n                item.addEventListener('mouseenter', event => {\r\n                    this.currentItem = item\r\n                    this.setActiveItems(item.dataset.index)\r\n                })\r\n                item.addEventListener('touchstart', event => {\r\n                    this.currentItem = item\r\n                    this.setActiveItems(item.dataset.index)\r\n                })\r\n            })\r\n\r\n            window.addEventListener('touchstart', event => {\r\n                this.currentY = event.changedTouches[0].clientY\r\n            })\r\n\r\n            window.addEventListener('touchend', event => {\r\n                this.currentY = 0\r\n            })\r\n\r\n            window.addEventListener('touchmove', event => {\r\n                let range = 0\r\n                let vector = null\r\n                const y = event.changedTouches[0].clientY\r\n\r\n                this.currentY > y ? vector = 1 : vector = 0\r\n\r\n                if (vector) {\r\n                    range = this.currentY - y\r\n                } else {\r\n                    range = y - this.currentY\r\n                }\r\n\r\n                for (let i = 0; i < this.columns; i++) {\r\n                    const type = this.currentItem.dataset.index\r\n                    const sibling = i + 1 - type\r\n                    let step\r\n    \r\n                    switch(sibling) {\r\n                        case 0:\r\n                            step = +Number(+range / 1.5).toFixed(1)\r\n                            break;\r\n                        case 1:\r\n                            step = +Number(+range / 2).toFixed(1)\r\n                            break;\r\n                        case -1:\r\n                            step = +Number(+range / 2).toFixed(1)\r\n                            break;\r\n                        case 2:\r\n                            step = +Number(+range / 2.5).toFixed(1)\r\n                            break;\r\n                        case -2:\r\n                            step = +Number(+range / 2.5).toFixed(1)\r\n                            break;\r\n                        case 3:\r\n                            step = +Number(+range / 3).toFixed(1)\r\n                            break;\r\n                        case -3:\r\n                            step = +Number(+range / 3).toFixed(1)\r\n                            break;\r\n                        case 4:\r\n                            step = +Number(+range / 4).toFixed(1)\r\n                            break;\r\n                        case -4:\r\n                            step = +Number(+range / 4).toFixed(1)\r\n                            break;\r\n                    }\r\n    \r\n                    if (sibling === 0) {\r\n                        this.moveItems(type, vector, step)\r\n                    } else {\r\n                        this.moveItems(+type + sibling, vector, step)\r\n                    }\r\n                }\r\n            })\r\n\r\n            window.addEventListener('wheel', event => {\r\n                ++this.wheelMod\r\n                setTimeout(() => --this.wheelMod, 100)\r\n\r\n                const vector = event.deltaY > 0 ? 1 : 0\r\n\r\n                for (let i = 0; i < this.columns; i++) {\r\n                    const type = this.currentItem.dataset.index\r\n                    const sibling = i + 1 - type\r\n                    let step\r\n    \r\n                    switch(sibling) {\r\n                        case 0:\r\n                            step = 36\r\n                            break;\r\n                        case 1:\r\n                            step = 18\r\n                            break;\r\n                        case -1:\r\n                            step = 18\r\n                            break;\r\n                        case 2:\r\n                            step = 12\r\n                            break;\r\n                        case -2:\r\n                            step = 12\r\n                            break;\r\n                        case 3:\r\n                            step = 9\r\n                            break;\r\n                        case -3:\r\n                            step = 9\r\n                            break;\r\n                        case 4:\r\n                            step = 7\r\n                            break;\r\n                        case -4:\r\n                            step = 7\r\n                            break;\r\n                    }\r\n    \r\n                    if (sibling === 0) {\r\n                        this.moveItems(type, vector, step * this.wheelMod)\r\n                    } else {\r\n                        this.moveItems(+type + sibling, vector, step * this.wheelMod)\r\n                    }\r\n                }\r\n            })\r\n        }\r\n\r\n        checkScreen() {\r\n            const width = window.innerWidth\r\n            if (width >= 1200) {\r\n                this.columns = 5\r\n            } else if (width < 1200 && width >= 1024) {\r\n                this.columns = 4\r\n            } else if (width < 1024 && width >= 768) {\r\n                this.columns = 3\r\n            } else {\r\n                this.columns = 2\r\n            }\r\n        }\r\n\r\n        setActiveItems(index) {\r\n            this.items.forEach(item => {\r\n                item.dataset.index == index ? \r\n                    item.classList.add('--active') : \r\n                    item.classList.remove('--active')\r\n            })\r\n        }\r\n\r\n        moveItems(type, vector, step) {\r\n            const groupItems = this.items.filter(item => item.dataset.index == type)\r\n            const end = this.heightGallery - window.innerHeight\r\n\r\n            groupItems.forEach(item => {\r\n                let y = +item.dataset.currenty\r\n\r\n                if (vector) {\r\n                    this.animate(item, {\r\n                        duration: 400,\r\n                        timing: this.makeEaseInOut,\r\n                        draw: function(progress) {\r\n                            const value = +Number(y - step * progress).toFixed(1)\r\n                            if (value <= +item.dataset.starty - end) {\r\n                                item.dataset.currenty = +item.dataset.starty - end\r\n                                item.style.transform = `translate3d(${item.dataset.startx}px, ${+item.dataset.starty - end}px, 1px)`\r\n                            } else {\r\n                                item.dataset.currenty = value\r\n                                item.style.transform = `translate3d(${item.dataset.startx}px, ${value}px, 1px)`\r\n                            }\r\n                        }.bind(this)\r\n                    })\r\n                } else {\r\n                    this.animate(item, {\r\n                        duration: 400,\r\n                        timing: this.makeEaseInOut,\r\n                        draw: function(progress) {\r\n                            const value = +Number(y + step * progress).toFixed(1)\r\n                            if (value >= +item.dataset.starty) {\r\n                                item.dataset.currenty = +item.dataset.starty\r\n                                item.style.transform = `translate3d(${item.dataset.startx}px, ${+item.dataset.starty}px, 1px)`\r\n                            } else {\r\n                                item.dataset.currenty = value\r\n                                item.style.transform = `translate3d(${item.dataset.startx}px, ${value}px, 1px)`\r\n                            }\r\n                        }.bind(this)\r\n                    })\r\n                }\r\n            })\r\n        }\r\n\r\n        setItemsWidth() {\r\n            const screenWidth = window.innerWidth\r\n            this.widthItem = +Number(screenWidth / this.columns).toFixed(1)\r\n\r\n            this.items.forEach(item => {\r\n                item.style.width = `${this.widthItem}px`\r\n            })\r\n        }\r\n\r\n        setItemsPosition() {\r\n            let modWidth = 0\r\n            let modHeight = 0\r\n            let type = 0\r\n\r\n            const image = this.items[0].querySelector('.gallery__image')\r\n            this.heightItem = this.heightGallery = +Number(image.getBoundingClientRect().height).toFixed(1) \r\n\r\n            this.items.forEach((item, index) => {\r\n                ++type\r\n                if (modWidth === this.columns) {\r\n                    this.heightGallery += this.heightItem\r\n                    modWidth = 0\r\n                    ++modHeight\r\n                    type = 1\r\n                }\r\n\r\n                item.dataset.index = type\r\n                item.dataset.startx = +Number(this.widthItem * modWidth).toFixed(1)\r\n                item.dataset.starty = +Number(this.heightItem * modHeight).toFixed(1)\r\n                item.dataset.currenty = +Number(this.heightItem * modHeight).toFixed(1)\r\n                item.style.transform = `translate3d(${this.widthItem * modWidth}px, ${this.heightItem * modHeight}px, 1px)`\r\n\r\n                ++modWidth\r\n            })\r\n        }\r\n\r\n        animate(el, {timing, draw, duration}) {\r\n    \r\n            let start = performance.now()\r\n    \r\n            requestAnimationFrame(function animate(time) {\r\n                // timeFraction изменяется от 0 до 1\r\n                let timeFraction = (time - start) / duration\r\n                if (timeFraction > 1) timeFraction = 1\r\n            \r\n                // вычисление текущего состояния анимации\r\n                let progress = timing(timeFraction)\r\n            \r\n                draw(progress) // отрисовать её\r\n            \r\n                if (timeFraction < 1) {\r\n                    requestAnimationFrame(animate)\r\n                } else {\r\n                    // finish\r\n                }\r\n            })\r\n        }\r\n\r\n        makeEaseInOut(timeFraction) {\r\n            if (timeFraction < .5)\r\n                return 2 * timeFraction / 2\r\n            else\r\n                return (2 - 2 * (1 - timeFraction)) / 2\r\n        }\r\n    }\r\n\r\n    new Gallery()\r\n})\r\n"],"names":["document","addEventListener","constructor","this","columns","heightGallery","items","querySelectorAll","widthItem","heightItem","currentItem","currentY","wheelMod","listeners","checkScreen","setItemsWidth","setItemsPosition","window","forEach","item","event","setActiveItems","dataset","index","changedTouches","clientY","range","vector","y","i","type","sibling","step","Number","toFixed","moveItems","setTimeout","deltaY","width","innerWidth","classList","add","remove","groupItems","filter","end","innerHeight","currenty","animate","duration","timing","makeEaseInOut","draw","progress","value","starty","style","transform","startx","bind","screenWidth","modWidth","modHeight","image","querySelector","getBoundingClientRect","height","el","start","performance","now","requestAnimationFrame","time","timeFraction"],"version":3,"file":"index.32a7503e.js.map"}